apiVersion: apps/v1
kind: Deployment
metadata:
  name: hackaton-deployment
  labels:
    app: hackaton-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hackaton-deployment
  template:
    metadata:
      labels:
        app: hackaton-deployment
    spec:
      containers:
        - name: c-hackaton-deployment
          image: nathancordeiro0/hackaton:latest
          ports:
            - containerPort: 8080
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: hackaton-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: hackaton-config
                  key: DATABASE_PORT
            - name: DATABASE
              valueFrom:
                configMapKeyRef:
                  name: hackaton-config
                  key: DATABASE
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: hackaton-secret
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hackaton-secret
                  key: DATABASE_PASSWORD
            - name: EMAIL_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: hackaton-config
                  key: EMAIL_USERNAME
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: hackaton-secret
                  key: EMAIL_PASSWORD
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"

---

apiVersion: v1
kind: Service
metadata:
  name: hackaton-service
  labels:
    app: hackaton-service
spec:
  type: ClusterIP
  selector:
    app: hackaton-deployment
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 8080

---

apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hackaton-hpa
  labels:
    app: hackaton-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hackaton-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 60

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hackaton-ingress
  labels:
    app: hackaton-ingress
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/use-forwarded-headers: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  ingressClassName: nginx
  rules:
    - host: "hackaton.local.com"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hackaton-service
                port:
                  number: 80
